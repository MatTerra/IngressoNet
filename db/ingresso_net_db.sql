-- MySQL Script generated by MySQL Workbench
-- ter 24 set 2019 19:46:12 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ingressoNetDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ingressoNetDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ingressoNetDB` ;
USE `ingressoNetDB` ;

-- -----------------------------------------------------
-- Table `ingressoNetDB`.`usuario_t`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ingressoNetDB`.`usuario_t` (
  `cpf` VARCHAR(14) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cpf`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingressoNetDB`.`cartao_t`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ingressoNetDB`.`cartao_t` (
  `numero` BIGINT NOT NULL,
  `cpf` VARCHAR(14) NOT NULL,
  `codigoDeSeguranca` INT NOT NULL,
  `dataDeValidade` DATE NULL,
  PRIMARY KEY (`numero`),
  INDEX `cpf_idx` (`cpf` ASC),
  CONSTRAINT `fk_cpf_cartao`
    FOREIGN KEY (`cpf`)
    REFERENCES `ingressoNetDB`.`usuario_t` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingressoNetDB`.`tipo_t`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ingressoNetDB`.`tipo_t` (
  `idTipo` INT NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTipo`),
  UNIQUE INDEX `idTipo_UNIQUE` (`idTipo` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingressoNetDB`.`jogo_t`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ingressoNetDB`.`jogo_t` (
  `idJogo` INT NOT NULL,
  `idTipo` INT NOT NULL,
  `nomeJogo` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idJogo`),
  INDEX `idTipo_idx` (`idTipo` ASC),
  UNIQUE INDEX `idJogo_UNIQUE` (`idJogo` ASC),
  CONSTRAINT `fk_idTipo_jogo`
    FOREIGN KEY (`idTipo`)
    REFERENCES `ingressoNetDB`.`tipo_t` (`idTipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingressoNetDB`.`estado_t`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ingressoNetDB`.`estado_t` (
  `idEstado` INT NOT NULL AUTO_INCREMENT,
  `siglaEstado` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`idEstado`),
  UNIQUE INDEX `idEstado_UNIQUE` (`idEstado` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingressoNetDB`.`cidade_t`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ingressoNetDB`.`cidade_t` (
  `idCidade` INT NOT NULL AUTO_INCREMENT,
  `idEstado` INT NOT NULL,
  `nomeCidade` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`idCidade`, `idEstado`),
  INDEX `idEstado_idx` (`idEstado` ASC),
  UNIQUE INDEX `idCidade_UNIQUE` (`idCidade` ASC),
  CONSTRAINT `fk_idEstado_cidade`
    FOREIGN KEY (`idEstado`)
    REFERENCES `ingressoNetDB`.`estado_t` (`idEstado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingressoNetDB`.`partida_t`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ingressoNetDB`.`partida_t` (
  `idPartida` INT NOT NULL,
  `cpf` VARCHAR(14) NOT NULL,
  `idJogo` INT NOT NULL,
  `idCidade` INT NOT NULL,
  `data` DATETIME NOT NULL,
  `preco` INT NOT NULL,
  `disponibilidade` INT NOT NULL,
  PRIMARY KEY (`idPartida`),
  INDEX `idJogo_idx` (`idJogo` ASC),
  INDEX `idCidade_idx` (`idCidade` ASC),
  INDEX `cpf_idx` (`cpf` ASC),
  UNIQUE INDEX `idPartida_UNIQUE` (`idPartida` ASC),
  CONSTRAINT `fk_idJogo_partida`
    FOREIGN KEY (`idJogo`)
    REFERENCES `ingressoNetDB`.`jogo_t` (`idJogo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_idCidade_partida`
    FOREIGN KEY (`idCidade`)
    REFERENCES `ingressoNetDB`.`cidade_t` (`idCidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cpf_partida`
    FOREIGN KEY (`cpf`)
    REFERENCES `ingressoNetDB`.`usuario_t` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingressoNetDB`.`ingresso_t`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ingressoNetDB`.`ingresso_t` (
  `idIngresso` INT NOT NULL AUTO_INCREMENT,
  `cpf` VARCHAR(14) NOT NULL,
  `idPartida` INT NOT NULL,
  PRIMARY KEY (`idIngresso`),
  INDEX `cpf_idx` (`cpf` ASC),
  INDEX `idPartida_idx` (`idPartida` ASC),
  UNIQUE INDEX `idIngresso_UNIQUE` (`idIngresso` ASC),
  CONSTRAINT `fk_cpf_ingresso`
    FOREIGN KEY (`cpf`)
    REFERENCES `ingressoNetDB`.`usuario_t` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_idPartida_ingresso`
    FOREIGN KEY (`idPartida`)
    REFERENCES `ingressoNetDB`.`partida_t` (`idPartida`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `ingressoNetDB`.`tipo_t`
-- -----------------------------------------------------
START TRANSACTION;
USE `ingressoNetDB`;
INSERT INTO `ingressoNetDB`.`tipo_t` (`idTipo`, `tipo`) VALUES (0, 'Local');
INSERT INTO `ingressoNetDB`.`tipo_t` (`idTipo`, `tipo`) VALUES (1, 'Estadual');
INSERT INTO `ingressoNetDB`.`tipo_t` (`idTipo`, `tipo`) VALUES (2, 'Nacional');
INSERT INTO `ingressoNetDB`.`tipo_t` (`idTipo`, `tipo`) VALUES (3, 'Internacional');

COMMIT;

